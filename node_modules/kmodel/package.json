{
  "name": "kmodel",
  "description": "Object-oriented model based on mongoose. for koa",
  "version": "1.0.6",
  "author": {
    "name": "AKI",
    "email": "tangxm90@gmail.com"
  },
  "dependencies": {
    "mongoose": "*",
    "thunkify": "*"
  },
  "keywords": [
    "kmodel",
    "mongoose",
    "koa",
    "yield"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:AKIo0O/kmodel.git"
  },
  "engines": {
    "node": ">=0.12"
  },
  "readmeFilename": "README.md",
  "_id": "kmodel@1.0.4",
  "readme": "kmodel\n======\n\n\n###Installation\n\n    $ alias node=\"node --harmony\"\n    $ npm install kmodel\n\n### Quick Start\n```js\nvar k = require(\"kmodel\");\n\nk.connect();// or k.connect(\"mongodb://ip:port\", __dirname+\"/models/\");\n\n```\n\n###koa\n``` js\nvar User = k.load(\"User\");\n\nrouter.get('/user/:id', function *() {\n\n    var id = this.params.id;\n\n    this.response.body = yield User.find({_id:id});\n});\n```\n### Run Local Test \n```js\n    \nvar test = function* (){\n    \n    var r = yield User.find({type:\"xx\"});\n    console.log(r)\n};\n\nrun(test);\n\nfunction run (fn) {\n    \n    var gen = fn();\n    \n    next();\n\n    function next(er, value){ \n        if (er) return gen.throw(er);\n        var continuable = gen.next(value);\n\n        if (continuable.done) return;\n        var callback = continuable.value;\n        callback(next);\n    }\n}\n\n```\n\n### Simple Case\n```js\n\nvar User = k.create({\n    username: \"string\",\n    password: \"string\",\n    nickname: \"string\"\n}, \"User\");\n\nvar query = function *(){\n    var users = yeild User.find({});\n};\n\nvar user = yield User.insertOne({\n    username: \"aki\",\n    password: \"aki\",\n    nickname: \"eeee\"\n});\n```\n\n###Extendable\n\n```js\n// for User\nUser.login = function* (name, password){\n    var user = yield this.find({username: name, password: password});\n    return user;\n};\n\n```\n\n```js\n// for Class \nk.all(\"names\", function* (username){\n    return yield this.find({username:username});\n});\n\n\n// then\nvar user = yield User.names(\"aki\");\n\n```\n\n### Use Features\n```js\nvar k = require(\"kmodel\").connect(),\n    User = k.load(\"User\");\n\nvar user = yield User.signup({username:\"wwww\",password:\"asasdasd\"});\n\n```\n\n###features\n \n// \"User.js\" in /kmodel/features\n\n```js\n\nvar userdao = k.load(\"User\");\n \nvar result = yield userdao.login(username, password);\n\n```\n",
  "bugs": {
    "url": "https://github.com/AKIo0O/kmodel/issues"
  },
  "_from": "kmodel@*",
  "homepage": "https://github.com/AKIo0O/kmodel",
  "dist": {
    "shasum": "aab8689ee1e5c0fc59ef65403dd13d5aa2f5c303",
    "tarball": "http://registry.npmjs.org/kmodel/-/kmodel-0.1.6.tgz"
  },
  "_resolved": "https://registry.npmjs.org/kmodel/-/kmodel-0.1.6.tgz",
  "_npmVersion": "1.2.21",
  "_npmUser": {
    "name": "imappbox",
    "email": "losabare@gmail.com"
  },
  "maintainers": [
    {
      "name": "imappbox",
      "email": "losabare@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "232b4790c5aa752d03104cdab3625d84c48ddb67",
  "gitHead": "20301ee4dffe2ae7cb0c90307547b35bb7915d21",
  "scripts": {}
}
